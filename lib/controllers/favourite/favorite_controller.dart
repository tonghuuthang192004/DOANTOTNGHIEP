import '../../models/product/product_model.dart';
import '../../services/favourite/favorite_service.dart';

class FavoriteController {
  List<ProductModel> favoriteProducts = [];

  /// üì• Load danh s√°ch s·∫£n ph·∫©m y√™u th√≠ch t·ª´ SharedPreferences
  Future<List<ProductModel>> loadFavorites() async {
    try {
      final userId = await FavoriteService.getCurrentUserId();
      if (userId != null) {
        favoriteProducts = await FavoriteService.getFavorites(userId);
      } else {
        favoriteProducts = [];
        print("‚ö†Ô∏è Kh√¥ng th·ªÉ t·∫£i y√™u th√≠ch v√¨ userId b·ªã null");
      }
    } catch (e) {
      favoriteProducts = [];
      print('‚ùå L·ªói khi t·∫£i danh s√°ch y√™u th√≠ch: $e');
    }

    return favoriteProducts;
  }

  /// ‚ûï Th√™m s·∫£n ph·∫©m v√†o y√™u th√≠ch
  Future<bool> addToFavorites(int productId) async {
    final success = await FavoriteService.addFavorite(productId);
    if (success) {
      await loadFavorites(); // t·ª± ƒë·ªông g·ªçi l·∫°i theo user hi·ªán t·∫°i
    }
    return success;
  }

  /// ‚ùå Xo√° m·ªôt s·∫£n ph·∫©m kh·ªèi y√™u th√≠ch
  Future<bool> removeFromFavorites(int productId) async {
    final userId = await FavoriteService.getCurrentUserId();
    if (userId == null) return false;

    final success = await FavoriteService.removeFavorite(userId, productId);
    if (success) {
      await loadFavorites();
    }
    return success;
  }

  /// üßπ Xo√° to√†n b·ªô y√™u th√≠ch
  Future<bool> clearAllFavorites() async {
    final success = await FavoriteService.clearFavorites();
    if (success) {
      await loadFavorites();
    }
    return success;
  }
}
